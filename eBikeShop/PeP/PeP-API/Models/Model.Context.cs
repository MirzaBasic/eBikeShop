//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PeP_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class eProdajaEntities : DbContext
    {
        public eProdajaEntities()
            : base("name=eProdajaEntities")
        {
            Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Dobavljaci> Dobavljacis { get; set; }
        public virtual DbSet<Izlazi> Izlazis { get; set; }
        public virtual DbSet<IzlazStavke> IzlazStavkes { get; set; }
        public virtual DbSet<JediniceMjere> JediniceMjeres { get; set; }
        public virtual DbSet<Korisnici> Korisnicis { get; set; }
        public virtual DbSet<KorisniciUloge> KorisniciUloges { get; set; }
        public virtual DbSet<Kupci> Kupcis { get; set; }
        public virtual DbSet<NarudzbaStavke> NarudzbaStavkes { get; set; }
        public virtual DbSet<Narudzbe> Narudzbes { get; set; }
        public virtual DbSet<Ocjene> Ocjenes { get; set; }
        public virtual DbSet<Proizvodi> Proizvodis { get; set; }
        public virtual DbSet<Skladista> Skladistas { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Ulazi> Ulazis { get; set; }
        public virtual DbSet<UlazStavke> UlazStavkes { get; set; }
        public virtual DbSet<Uloge> Uloges { get; set; }
        public virtual DbSet<VrsteProizvoda> VrsteProizvodas { get; set; }
    
        public virtual int esp_KorisniciUloge_Insert(Nullable<int> korisnikID, Nullable<int> ulogaID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Insert", korisnikIDParameter, ulogaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Korisnici_Insert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Korisnici_Insert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_Korisnici_SelectByImePrezime(string imePrezime, MergeOption mergeOption)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_Korisnici_SelectByImePrezime", mergeOption, imePrezimeParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_KorisniciSelectById(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_KorisniciSelectById", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Korisnici> esp_KorisniciSelectById(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("esp_KorisniciSelectById", mergeOption, korisnikIDParameter);
        }
    
        public virtual int esp_Korisnici_Update(Nullable<int> korisnikID, string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<bool> status)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnici_Update", korisnikIDParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, statusParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectByKorisnikID(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectByKorisnikID", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Uloge> esp_Uloge_SelectByKorisnikID(Nullable<int> korisnikID, MergeOption mergeOption)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Uloge>("esp_Uloge_SelectByKorisnikID", mergeOption, korisnikIDParameter);
        }
    
        public virtual int esp_KorisniciUloge_Delete(Nullable<int> korisnikID, Nullable<int> ulogaID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_KorisniciUloge_Delete", korisnikIDParameter, ulogaIDParameter);
        }
    
        public virtual int esp_Proizvodi_Insert(string naziv, string sifra, Nullable<decimal> cijena, Nullable<int> vrstaID, Nullable<int> jedinicaMjereID, byte[] slika, byte[] slikaThumb)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var jedinicaMjereIDParameter = jedinicaMjereID.HasValue ?
                new ObjectParameter("JedinicaMjereID", jedinicaMjereID) :
                new ObjectParameter("JedinicaMjereID", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Proizvodi_Insert", nazivParameter, sifraParameter, cijenaParameter, vrstaIDParameter, jedinicaMjereIDParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual ObjectResult<ProizvodiByID_Result> esp_Proizvodi_SelectById(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProizvodiByID_Result>("esp_Proizvodi_SelectById", proizvodIDParameter);
        }
    
        public virtual ObjectResult<Proizvodi_Result> esp_Proizvodi_SelectByNazivSifra(string nazivSifra)
        {
            var nazivSifraParameter = nazivSifra != null ?
                new ObjectParameter("NazivSifra", nazivSifra) :
                new ObjectParameter("NazivSifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi_Result>("esp_Proizvodi_SelectByNazivSifra", nazivSifraParameter);
        }
    
        public virtual ObjectResult<Proizvodi_Result> esp_Proizvodi_SelectByNazivSifraVrstaID(string nazivSifra, Nullable<int> vrstaID)
        {
            var nazivSifraParameter = nazivSifra != null ?
                new ObjectParameter("NazivSifra", nazivSifra) :
                new ObjectParameter("NazivSifra", typeof(string));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi_Result>("esp_Proizvodi_SelectByNazivSifraVrstaID", nazivSifraParameter, vrstaIDParameter);
        }
    
        public virtual int esp_Proizvodi_Update(Nullable<int> proizvodID, string naziv, string sifra, Nullable<decimal> cijena, Nullable<int> vrstaID, Nullable<int> jedinicaMjereID, byte[] slika, byte[] slikaThumb, Nullable<bool> status)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var jedinicaMjereIDParameter = jedinicaMjereID.HasValue ?
                new ObjectParameter("JedinicaMjereID", jedinicaMjereID) :
                new ObjectParameter("JedinicaMjereID", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Proizvodi_Update", proizvodIDParameter, nazivParameter, sifraParameter, cijenaParameter, vrstaIDParameter, jedinicaMjereIDParameter, slikaParameter, slikaThumbParameter, statusParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectByNaziv(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectByNaziv", nazivParameter);
        }
    
        public virtual ObjectResult<Dobavljaci> esp_Dobavljaci_SelectByNaziv(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dobavljaci>("esp_Dobavljaci_SelectByNaziv", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<Skladista> esp_Skladista_SelectByNameOrAddress(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Skladista>("esp_Skladista_SelectByNameOrAddress", nazivParameter);
        }
    
        public virtual ObjectResult<Skladista> esp_Skladista_SelectByNameOrAddress(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Skladista>("esp_Skladista_SelectByNameOrAddress", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<NarudzbeStavke_Result> esp_NarudzbeStavke_SelectByNarudzbaID(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NarudzbeStavke_Result>("esp_NarudzbeStavke_SelectByNarudzbaID", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Narudzbe_Result> esp_Narudzbe_SelectAktivne(string datum)
        {
            var datumParameter = datum != null ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzbe_Result>("esp_Narudzbe_SelectAktivne", datumParameter);
        }
    
        public virtual int esp_Izlazi_InsertByNarudzbaID(Nullable<int> narudzbaID, Nullable<decimal> iznosSaPDV, Nullable<decimal> iznosBezPDV, Nullable<int> skladisteID, Nullable<int> korisnikID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var iznosSaPDVParameter = iznosSaPDV.HasValue ?
                new ObjectParameter("IznosSaPDV", iznosSaPDV) :
                new ObjectParameter("IznosSaPDV", typeof(decimal));
    
            var iznosBezPDVParameter = iznosBezPDV.HasValue ?
                new ObjectParameter("IznosBezPDV", iznosBezPDV) :
                new ObjectParameter("IznosBezPDV", typeof(decimal));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Izlazi_InsertByNarudzbaID", narudzbaIDParameter, iznosSaPDVParameter, iznosBezPDVParameter, skladisteIDParameter, korisnikIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_Proizvodi_ProvjeraKolicine(Nullable<int> proizvodID, Nullable<int> skladisteID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_Proizvodi_ProvjeraKolicine", proizvodIDParameter, skladisteIDParameter);
        }
    
        public virtual ObjectResult<Narudzbe_Result> esp_Narudzbe_SelectByID(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzbe_Result>("esp_Narudzbe_SelectByID", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Proizvodi> esp_Proizvodi_SelectBySifra(string sifra)
        {
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi>("esp_Proizvodi_SelectBySifra", sifraParameter);
        }
    
        public virtual ObjectResult<Proizvodi> esp_Proizvodi_SelectBySifra(string sifra, MergeOption mergeOption)
        {
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi>("esp_Proizvodi_SelectBySifra", mergeOption, sifraParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> esp_UlaziInsert(string brojFakture, Nullable<System.DateTime> datum, Nullable<decimal> iznosRacuna, Nullable<decimal> pDV, string napomena, Nullable<int> skladisteID, Nullable<int> korisnikID, Nullable<int> dobavljacID)
        {
            var brojFaktureParameter = brojFakture != null ?
                new ObjectParameter("BrojFakture", brojFakture) :
                new ObjectParameter("BrojFakture", typeof(string));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var iznosRacunaParameter = iznosRacuna.HasValue ?
                new ObjectParameter("IznosRacuna", iznosRacuna) :
                new ObjectParameter("IznosRacuna", typeof(decimal));
    
            var pDVParameter = pDV.HasValue ?
                new ObjectParameter("PDV", pDV) :
                new ObjectParameter("PDV", typeof(decimal));
    
            var napomenaParameter = napomena != null ?
                new ObjectParameter("Napomena", napomena) :
                new ObjectParameter("Napomena", typeof(string));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var dobavljacIDParameter = dobavljacID.HasValue ?
                new ObjectParameter("DobavljacID", dobavljacID) :
                new ObjectParameter("DobavljacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("esp_UlaziInsert", brojFaktureParameter, datumParameter, iznosRacunaParameter, pDVParameter, napomenaParameter, skladisteIDParameter, korisnikIDParameter, dobavljacIDParameter);
        }
    
        public virtual int esp_NarudzbaStavke_Insert(Nullable<int> narudzbaID, Nullable<int> proizvodID, Nullable<int> kolicina)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_NarudzbaStavke_Insert", narudzbaIDParameter, proizvodIDParameter, kolicinaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Narudzbe_Insert(string brojNarudzbe, Nullable<int> kupacID, Nullable<System.DateTime> datum)
        {
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Narudzbe_Insert", brojNarudzbeParameter, kupacIDParameter, datumParameter);
        }
    
        public virtual ObjectResult<ProizvodiStavke_Result> esp_Proizvodi_SelectByNarudzbaID(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProizvodiStavke_Result>("esp_Proizvodi_SelectByNarudzbaID", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<Narudzbe> esp_Narudzbe_SelectAktivneByKupacID(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzbe>("esp_Narudzbe_SelectAktivneByKupacID", kupacIDParameter);
        }
    
        public virtual ObjectResult<Narudzbe> esp_Narudzbe_SelectAktivneByKupacID(Nullable<int> kupacID, MergeOption mergeOption)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Narudzbe>("esp_Narudzbe_SelectAktivneByKupacID", mergeOption, kupacIDParameter);
        }
    
        public virtual int esp_Narudzbe_OtkaziByID(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Narudzbe_OtkaziByID", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<usp_PoslovanjeGodineMjeseci_Result> usp_PoslovanjeGodineMjeseci()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PoslovanjeGodineMjeseci_Result>("usp_PoslovanjeGodineMjeseci");
        }
    }
}
